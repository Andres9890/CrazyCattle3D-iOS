name: Build iOS 6 Compatible IPA

on:
  workflow_dispatch:

jobs:
  build-ios6-compat:
    name: Build iOS 6 Compatible IPA
    runs-on: macos-13
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '14.1.0'

      - name: Fix Project Format
        run: |
          sed -i '' 's/objectVersion = 77/objectVersion = 56/' xc/CrazyCattle3D.xcodeproj/project.pbxproj
          sed -i '' 's/preferredProjectObjectVersion = 77/preferredProjectObjectVersion = 56/' xc/CrazyCattle3D.xcodeproj/project.pbxproj

      - name: Build with Minimum Supported iOS Version
        run: |
          xcodebuild clean archive \
            -project xc/CrazyCattle3D.xcodeproj \
            -scheme "CrazyCattle3D" \
            -configuration Release \
            -archivePath build/CrazyCattle3D.xcarchive \
            -sdk iphoneos \
            -destination 'generic/platform=iOS' \
            ONLY_ACTIVE_ARCH=NO \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            SWIFT_OPTIMIZATION_LEVEL="-Onone" \
            IPHONEOS_DEPLOYMENT_TARGET=11.0 \
            ARCHS="arm64" \
            VALID_ARCHS="arm64" \
            GCC_PREPROCESSOR_DEFINITIONS="TARGET_OS_IPHONE_MIN_VERSION=6.0"

      - name: Create Initial IPA
        run: |
          cp -R build/CrazyCattle3D.xcarchive/Products/Applications/CrazyCattle3D.app .
          mkdir -p Payload
          cp -R CrazyCattle3D.app Payload/
          zip -r CrazyCattle3D-initial.ipa Payload
          rm -rf Payload CrazyCattle3D.app

      - name: Install tools
        run: |
          brew install unzip
          pip3 install biplist

      - name: Post-Process IPA for iOS 6 Compatibility
        run: |
          mkdir -p ios6-compat
          cd ios6-compat
          
          unzip -q ../CrazyCattle3D-initial.ipa
          
          APP_DIR=$(find Payload -name "*.app" -type d | head -1)
          if [ -z "$APP_DIR" ]; then
            echo "ERROR: No .app directory found"
            exit 1
          fi
          
          echo "App directory: $APP_DIR"
          
          if [ -f "$APP_DIR/Info.plist" ]; then
            echo "Modifying Info.plist for iOS 6 compatibility"
            
            plutil -convert xml1 "$APP_DIR/Info.plist"
            
            echo "Setting MinimumOSVersion to 6.0"
            plutil -replace MinimumOSVersion -string "6.0" "$APP_DIR/Info.plist"
            
            echo "Force UIRequiredDeviceCapabilities to armv7"
            plutil -replace UIRequiredDeviceCapabilities -xml "<array><string>armv7</string></array>" "$APP_DIR/Info.plist" || true
            
            echo "Set UIDeviceFamily to include iPhone and iPad"
            plutil -replace UIDeviceFamily -xml "<array><integer>1</integer><integer>2</integer></array>" "$APP_DIR/Info.plist" || true
          else
            echo "ERROR: Info.plist not found"
            exit 1
          fi
          
          echo "Cleaning up problematic files"
          find Payload -name ".DS_Store" -delete
          find Payload -name "ftm.dylib" -delete
          
          echo "Setting executable permissions"
          EXECUTABLE_NAME=$(plutil -extract CFBundleExecutable raw "$APP_DIR/Info.plist" 2>/dev/null)
          if [ -n "$EXECUTABLE_NAME" ] && [ -f "$APP_DIR/$EXECUTABLE_NAME" ]; then
            chmod +x "$APP_DIR/$EXECUTABLE_NAME"
          fi
          
          echo "Creating iOS 6 compatible IPA"
          zip -qr ../CrazyCattle3D-iOS6.ipa Payload
          
          cd ..
          
          echo "Finished creating iOS 6 compatible IPA"
          ls -la CrazyCattle3D-iOS6.ipa

      - name: Upload iOS 6 Compatible IPA
        uses: actions/upload-artifact@v4
        with:
          name: CrazyCattle3D-iOS6
          path: CrazyCattle3D-iOS6.ipa
          retention-days: 90

      - name: Advanced IPA Repair (Alternative Method)
        run: |
          mkdir -p ios6-repair
          cd ios6-repair
          
          unzip -q ../CrazyCattle3D-iOS6.ipa
          
          APP_DIR=$(find Payload -name "*.app" -type d | head -1)
          if [ -z "$APP_DIR" ]; then
            echo "No .app directory found"
            exit 1
          fi
          
          echo "Creating extremely minimal Info.plist for iOS 6"
          cat > minimal_Info.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
          <key>CFBundleExecutable</key>
          <string>CrazyCattle3D</string>
          <key>CFBundleIdentifier</key>
          <string>com.neon443.CrazyCattle3D</string>
          <key>CFBundleName</key>
          <string>CrazyCattle3D</string>
          <key>CFBundleVersion</key>
          <string>1.0</string>
          <key>CFBundleShortVersionString</key>
          <string>1.0</string>
          <key>MinimumOSVersion</key>
          <string>6.0</string>
          <key>UIDeviceFamily</key>
          <array>
          <integer>1</integer>
          <integer>2</integer>
          </array>
          <key>UIRequiredDeviceCapabilities</key>
          <array>
          <string>armv7</string>
          </array>
          </dict>
          </plist>
          EOF
          
          EXECUTABLE_NAME=$(plutil -extract CFBundleExecutable raw "$APP_DIR/Info.plist" 2>/dev/null || echo "CrazyCattle3D")
          BUNDLE_ID=$(plutil -extract CFBundleIdentifier raw "$APP_DIR/Info.plist" 2>/dev/null || echo "com.yourcompany.CrazyCattle3D")
          BUNDLE_NAME=$(plutil -extract CFBundleName raw "$APP_DIR/Info.plist" 2>/dev/null || echo "CrazyCattle3D")
          BUNDLE_VERSION=$(plutil -extract CFBundleVersion raw "$APP_DIR/Info.plist" 2>/dev/null || echo "1.0")
          SHORT_VERSION=$(plutil -extract CFBundleShortVersionString raw "$APP_DIR/Info.plist" 2>/dev/null || echo "1.0")
          
          plutil -replace CFBundleExecutable -string "$EXECUTABLE_NAME" minimal_Info.plist
          plutil -replace CFBundleIdentifier -string "$BUNDLE_ID" minimal_Info.plist
          plutil -replace CFBundleName -string "$BUNDLE_NAME" minimal_Info.plist
          plutil -replace CFBundleVersion -string "$BUNDLE_VERSION" minimal_Info.plist
          plutil -replace CFBundleShortVersionString -string "$SHORT_VERSION" minimal_Info.plist
          
          mv minimal_Info.plist "$APP_DIR/Info.plist"
          
          echo "Creating iOS 6 repaired IPA"
          zip -qr ../CrazyCattle3D-iOS6-repaired.ipa Payload
          
          cd ..
          
          echo "Finished creating repaired IPA"
          ls -la CrazyCattle3D-iOS6-repaired.ipa

      - name: Upload Repaired IPA (Alternative)
        uses: actions/upload-artifact@v4
        with:
          name: CrazyCattle3D-iOS6-repaired
          path: CrazyCattle3D-iOS6-repaired.ipa
          retention-days: 90
